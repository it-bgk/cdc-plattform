FQDN=misp.example.com
EGRESS_IP_SUBNET=192.168.200
INTERNAL_IP_SUBNET=192.168.201

# The hive
TH_CORTEX_KEY=
TH_CORTEX_URL=http://cortex:9001
TH_ES_HOSTNAME=elasticsearch
TH_MISP_URL=http://localhost/
TH_MISP_KEY=***
TH_MISP_CASE_TEMPLATE="<Template_Name_goes_here>"

# Cortex
#SECRET=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1)"}
CORTEX_SECRET=CHANGE ME
CORTEX_AUTH=local
#CORTEX_AUTH_AD_SERVERNAMES=[ad1.mydomain.local, ad2.mydomain.local]
#CORTEX_AUTH_AD_DOMAINNAME=MYDOMAIN
CORTEX_ES_URL=http://${TH_ES_HOSTNAME}:9200
#CORTEX_DOCKER_HOST=unix:///var/run/docker.sock
#CORTEX_ES_AUTH_USER=
#CORTEX_ES_AUTH_PW=
#CORTEX_CONFIG_FILE=/etc/cortex/application.conf

# Cerebro
#SECRET=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 64 | head -n 1)"}
CEREBRO_SECRET=CHANGE ME
#CEREBRO_BASE_PATH=/es-admin/
CEREBRO_ES_URL=http://${TH_ES_HOSTNAME}:9200
CEREBRO_ES_AUTH_USER=kibanaserver
CEREBRO_ES_AUTH_PW=kibanaserver
# Set it to ldap to activate ldap authorization
    #- AUTH_TYPE=ldap
CEREBRO_AUTH_TYPE=basic
CEREBRO_BASIC_AUTH_USER=CHANGE ME
CEREBRO_BASIC_AUTH_PW=CHANGE ME
CEREBRO_LDAP_URL=${AUTH_LDAP_SERVER_URI}
CEREBRO_LDAP_BASE_DN=${AUTH_LDAP_BASE_DN}
# User identifier that can perform searches
CEREBRO_LDAP_BIND_DN=${AUTH_LDAP_BIND_DN}
CEREBRO_LDAP_BIND_PW=${AUTH_LDAP_BIND_PASSWORD}
# user-template executes a string.format() operation where
    # username is passed in first, followed by base-dn. Some examples
    #  - %s => leave user untouched
    #  - %s@domain.com => append "@domain.com" to username
    #  - uid=%s,%s => usual case of OpenLDAP
CEREBRO_LDAP_USER_TEMPLATE=%s
# If left unset LDAP_BASE_DN will be used
    # LDAP_GROUP_BASE_DN=OU=users,DC=example,DC=com
#CEREBRO_LDAP_GROUP_BASE_DN=
# Attribute that represent the user, for example uid or mail
CEREBRO_LDAP_USER_ATTR=mail
# If left unset LDAP_USER_TEMPLATE will be used
#CEREBRO_LDAP_USER_ATTR_TEMPLATE=%s
# Filter that tests membership of the group. If this property is empty then there is no group membership check
    # AD example => memberOf=CN=mygroup,ou=ouofthegroup,DC=domain,DC=com
    # OpenLDAP example => CN=mygroup
    # LDAP_GROUP=memberOf=memberOf=CN=mygroup,ou=ouofthegroup,DC=domain,DC=com
CEREBRO_LDAP_GROUP=

### Watchtower
WATCHTOWER_NOTIFICATION_EMAIL_FROM=
WATCHTOWER_NOTIFICATION_EMAIL_TO=
WATCHTOWER_NOTIFICATION_EMAIL_SERVER=
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=25
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=

### OpenCTI
#OPENCTI_BASE_PATH=/opencti
OPENCTI_ADMIN_EMAIL=admin@opencti.io
OPENCTI_ADMIN_PASSWORD=ChangeMe
OPENCTI_ADMIN_TOKEN=ChangeMe
MINIO_ACCESS_KEY=ChangeMeAccess
MINIO_SECRET_KEY=ChangeMeKey
RABBITMQ_DEFAULT_USER=guest
RABBITMQ_DEFAULT_PASS=guest
CONNECTOR_HISTORY_ID=ChangeMe
CONNECTOR_EXPORT_FILE_STIX_ID=ChangeMe
CONNECTOR_EXPORT_FILE_CSV_ID=ChangeMe
CONNECTOR_IMPORT_FILE_STIX_ID=ChangeMe
CONNECTOR_IMPORT_FILE_PDF_OBSERVABLES_ID=ChangeMe
CONNECTOR_OPENCTI_ID=ChangeMe

### Watcher
# Time Zone
TZ=Europe/Berlin
# SECURITY WARNING: In production please put DJANGO_DEBUG environment variable to False
DJANGO_DEBUG=False
# SECURITY WARNING: keep the secret key used in production secret!
# use 'openssl rand -base64 33' to generate
DJANGO_SECRET_KEY=
# In case of "Bad Request" Error when accessing Watcher web interface.
# Fill this variable with your Watcher Server Instance IP / or your Server FQDN.
# It is limited to a single IP address / FQDN. Please use this syntax: ALLOWED_HOST=X.X.X.X / ALLOWED_HOST=mywebsite.com
ALLOWED_HOST=
# DJANGO EMAIL CONFIGURATION
EMAIL_FROM=${WATCHTOWER_NOTIFICATION_EMAIL_FROM}
SMTP_SERVER=${WATCHTOWER_NOTIFICATION_EMAIL_SERVER}
WATCHER_URL=${FQDN}
# THE HIVE SETUP
THE_HIVE_URL=hive.${FQDN}
THE_HIVE_KEY=
THE_HIVE_CASE_ASSIGNEE=watcher
# MISP Setup
MISP_URL=misp-int.${FQDN}
MISP_VERIFY_SSL=False
MISP_KEY=
# Optional
MISP_TICKETING_URL=
# LDAP Setup
AUTH_LDAP_SERVER_URI=ldap://test.example.com:389
AUTH_LDAP_BIND_DN=
AUTH_LDAP_BIND_PASSWORD=
AUTH_LDAP_BASE_DN=OU=users,DC=example,DC=com
AUTH_LDAP_FILTER=(uid=%(user)s)
# Searx Setup
SEARX_HOSTNAME=10.10.10.3:8080
SEARX_PROTOCOL=http://
# automaticaly update settings to the new version
# comment this line if you made / will make some modifications to the settings
SEARX_COMMAND=-f
# If you have a proxy, please fill these variables
HTTP_PROXY=
HTTPS_PROXY=

